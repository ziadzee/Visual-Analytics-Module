{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Exploring London Bike Rental Data\n",
    "\n",
    "##### In this notebook, we will explore and visualise data concerning London TFL rental bikes. \n",
    "\n",
    "##### The dataset contains the following columns:\n",
    "- ID - Unique bike dock ID\n",
    "- Name - Street name where the bike station lives\n",
    "- Lat - Latitude\n",
    "- Long - Longtitude\n",
    "- updatedDate - When the value was last updated\n",
    "- numBikes - Number of bikes availble for hire in this station\n",
    "- numEmptyDocks\t - Number of empty docks for bike returns in this station\n",
    "- installed\t - If station installed (available/active)\n",
    "- locked\t - if station is locked (unavailable/inactive)\n",
    "- installedDate\t - When the station was installed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import geopandas as gpd\n",
    "import seaborn as sns\n",
    "\n",
    "pd.set_option(\"display.max.columns\", None)\n",
    "pd.set_option(\"display.max.rows\", None)\n",
    "\n",
    "df = pd.read_csv(\"latestTflBikes_2020-10-05_13-19-00.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>updatedDate</th>\n",
       "      <th>numBikes</th>\n",
       "      <th>numEmptyDocks</th>\n",
       "      <th>installed</th>\n",
       "      <th>locked</th>\n",
       "      <th>installedDate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>River Street , Clerkenwell</td>\n",
       "      <td>51.529163</td>\n",
       "      <td>-0.109971</td>\n",
       "      <td>2020-10-05 13:19:00</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>2010-07-12 16:08:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Phillimore Gardens, Kensington</td>\n",
       "      <td>51.499607</td>\n",
       "      <td>-0.197574</td>\n",
       "      <td>2020-10-05 13:19:00</td>\n",
       "      <td>24</td>\n",
       "      <td>13</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>2010-07-08 11:43:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>Christopher Street, Liverpool Street</td>\n",
       "      <td>51.521284</td>\n",
       "      <td>-0.084606</td>\n",
       "      <td>2020-10-05 13:19:00</td>\n",
       "      <td>1</td>\n",
       "      <td>31</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>2010-07-04 11:46:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>St. Chad's Street, King's Cross</td>\n",
       "      <td>51.530059</td>\n",
       "      <td>-0.120974</td>\n",
       "      <td>2020-10-05 13:19:00</td>\n",
       "      <td>17</td>\n",
       "      <td>3</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>2010-07-04 11:58:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>Sedding Street, Sloane Square</td>\n",
       "      <td>51.493130</td>\n",
       "      <td>-0.156876</td>\n",
       "      <td>2020-10-05 13:19:00</td>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>2010-07-04 12:04:00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id                                  name        lat      long  \\\n",
       "0   1            River Street , Clerkenwell  51.529163 -0.109971   \n",
       "1   2        Phillimore Gardens, Kensington  51.499607 -0.197574   \n",
       "2   3  Christopher Street, Liverpool Street  51.521284 -0.084606   \n",
       "3   4       St. Chad's Street, King's Cross  51.530059 -0.120974   \n",
       "4   5         Sedding Street, Sloane Square  51.493130 -0.156876   \n",
       "\n",
       "           updatedDate  numBikes  numEmptyDocks  installed  locked  \\\n",
       "0  2020-10-05 13:19:00         8             10       True   False   \n",
       "1  2020-10-05 13:19:00        24             13       True   False   \n",
       "2  2020-10-05 13:19:00         1             31       True   False   \n",
       "3  2020-10-05 13:19:00        17              3       True   False   \n",
       "4  2020-10-05 13:19:00        26              0       True   False   \n",
       "\n",
       "         installedDate  \n",
       "0  2010-07-12 16:08:00  \n",
       "1  2010-07-08 11:43:00  \n",
       "2  2010-07-04 11:46:00  \n",
       "3  2010-07-04 11:58:00  \n",
       "4  2010-07-04 12:04:00  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>updatedDate</th>\n",
       "      <th>numBikes</th>\n",
       "      <th>numEmptyDocks</th>\n",
       "      <th>installed</th>\n",
       "      <th>locked</th>\n",
       "      <th>installedDate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>780</td>\n",
       "      <td>838</td>\n",
       "      <td>Fore Street Avenue, Guildhall</td>\n",
       "      <td>51.518093</td>\n",
       "      <td>-0.091402</td>\n",
       "      <td>2020-10-05 13:19:00</td>\n",
       "      <td>6</td>\n",
       "      <td>19</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>2018-10-11 11:45:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>781</td>\n",
       "      <td>839</td>\n",
       "      <td>Sea Containers, South Bank</td>\n",
       "      <td>51.508033</td>\n",
       "      <td>-0.106824</td>\n",
       "      <td>2020-10-05 13:19:00</td>\n",
       "      <td>7</td>\n",
       "      <td>23</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>2018-12-12 10:39:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>782</td>\n",
       "      <td>840</td>\n",
       "      <td>George Row, Bermondsey</td>\n",
       "      <td>51.498585</td>\n",
       "      <td>-0.068982</td>\n",
       "      <td>2020-10-05 13:19:00</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>2020-09-10 16:44:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>783</td>\n",
       "      <td>841</td>\n",
       "      <td>Tower Wharf, Bermondsey</td>\n",
       "      <td>51.500845</td>\n",
       "      <td>-0.074704</td>\n",
       "      <td>2020-10-05 13:19:00</td>\n",
       "      <td>18</td>\n",
       "      <td>2</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>1970-01-01 01:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>784</td>\n",
       "      <td>842</td>\n",
       "      <td>Temple Gardens, Temple</td>\n",
       "      <td>51.510981</td>\n",
       "      <td>-0.108322</td>\n",
       "      <td>2020-10-05 13:19:00</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>2020-09-23 11:20:00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      id                           name        lat      long  \\\n",
       "780  838  Fore Street Avenue, Guildhall  51.518093 -0.091402   \n",
       "781  839     Sea Containers, South Bank  51.508033 -0.106824   \n",
       "782  840         George Row, Bermondsey  51.498585 -0.068982   \n",
       "783  841        Tower Wharf, Bermondsey  51.500845 -0.074704   \n",
       "784  842         Temple Gardens, Temple  51.510981 -0.108322   \n",
       "\n",
       "             updatedDate  numBikes  numEmptyDocks  installed  locked  \\\n",
       "780  2020-10-05 13:19:00         6             19       True   False   \n",
       "781  2020-10-05 13:19:00         7             23       True   False   \n",
       "782  2020-10-05 13:19:00        20              1       True   False   \n",
       "783  2020-10-05 13:19:00        18              2       True   False   \n",
       "784  2020-10-05 13:19:00         0             24       True   False   \n",
       "\n",
       "           installedDate  \n",
       "780  2018-10-11 11:45:00  \n",
       "781  2018-12-12 10:39:00  \n",
       "782  2020-09-10 16:44:00  \n",
       "783  1970-01-01 01:00:00  \n",
       "784  2020-09-23 11:20:00  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "I'll start by first exploring the dataset and try to get a better understanding of each column and their respective values\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 785 entries, 0 to 784\n",
      "Data columns (total 10 columns):\n",
      "id               785 non-null int64\n",
      "name             785 non-null object\n",
      "lat              785 non-null float64\n",
      "long             785 non-null float64\n",
      "updatedDate      785 non-null object\n",
      "numBikes         785 non-null int64\n",
      "numEmptyDocks    785 non-null int64\n",
      "installed        785 non-null bool\n",
      "locked           785 non-null bool\n",
      "installedDate    785 non-null object\n",
      "dtypes: bool(2), float64(2), int64(3), object(3)\n",
      "memory usage: 50.7+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the two cells above, it seems that the average number of bikes per station is around 11 with each station\n",
    "having around 14 empty docks. It seems that stations have an adequate number of docks empty for people to return bikes to.\n",
    "\n",
    "The dataset also has no missing values."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>numBikes</th>\n",
       "      <th>numEmptyDocks</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>count</td>\n",
       "      <td>785.000000</td>\n",
       "      <td>785.000000</td>\n",
       "      <td>785.000000</td>\n",
       "      <td>785.000000</td>\n",
       "      <td>785.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>mean</td>\n",
       "      <td>419.905732</td>\n",
       "      <td>51.505916</td>\n",
       "      <td>-0.128046</td>\n",
       "      <td>11.442038</td>\n",
       "      <td>14.187261</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>std</td>\n",
       "      <td>244.195161</td>\n",
       "      <td>0.020179</td>\n",
       "      <td>0.054823</td>\n",
       "      <td>7.926610</td>\n",
       "      <td>8.762562</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>min</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>51.454753</td>\n",
       "      <td>-0.236770</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>25%</td>\n",
       "      <td>207.000000</td>\n",
       "      <td>51.493146</td>\n",
       "      <td>-0.171682</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>8.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>50%</td>\n",
       "      <td>425.000000</td>\n",
       "      <td>51.509224</td>\n",
       "      <td>-0.129698</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>13.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>75%</td>\n",
       "      <td>634.000000</td>\n",
       "      <td>51.520893</td>\n",
       "      <td>-0.092921</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>19.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>max</td>\n",
       "      <td>842.000000</td>\n",
       "      <td>51.549369</td>\n",
       "      <td>-0.002275</td>\n",
       "      <td>41.000000</td>\n",
       "      <td>44.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               id         lat        long    numBikes  numEmptyDocks\n",
       "count  785.000000  785.000000  785.000000  785.000000     785.000000\n",
       "mean   419.905732   51.505916   -0.128046   11.442038      14.187261\n",
       "std    244.195161    0.020179    0.054823    7.926610       8.762562\n",
       "min      1.000000   51.454753   -0.236770    0.000000       0.000000\n",
       "25%    207.000000   51.493146   -0.171682    5.000000       8.000000\n",
       "50%    425.000000   51.509224   -0.129698   10.000000      13.000000\n",
       "75%    634.000000   51.520893   -0.092921   16.000000      19.000000\n",
       "max    842.000000   51.549369   -0.002275   41.000000      44.000000"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The cell below confirms that the location of stations are given in both street name and area. It will be worth spliting these two values into separate columns so that we can plot based on area."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Queen Victoria Street, St. Paul's                    1\n",
       "Ebury Bridge, Pimlico                                1\n",
       "Alfreda Street, Battersea Park                       1\n",
       "Chrisp Street Market, Poplar                         1\n",
       "Waterloo Station 2, Waterloo                         1\n",
       "Black Lion Gate, Kensington Gardens                  1\n",
       "Mile End Park Leisure Centre, Mile End               1\n",
       "Wellington Road, St. John's Wood                     1\n",
       "Pall Mall East, West End                             1\n",
       "Harriet Street, Knightsbridge                        1\n",
       "Commercial Street, Shoreditch                        1\n",
       "Bethnal Green Garden, Bethnal Green                  1\n",
       "Northfields, Wandsworth                              1\n",
       "Holden Street, Battersea                             1\n",
       "Houghton Street, Strand                              1\n",
       "Bayswater Road, Hyde Park                            1\n",
       "Waterloo Bridge, South Bank                          1\n",
       "Stratford Station, Stratford                         1\n",
       "Furze Green, Bow                                     1\n",
       "Eastbourne Mews, Paddington                          1\n",
       "Southwark Station 2, Southwark                       1\n",
       "Hammersmith Road, Hammersmith                        1\n",
       "St. John's Park, Cubitt Town                         1\n",
       "Mile End Stadium, Mile End                           1\n",
       "Geraldine Street, Elephant & Castle                  1\n",
       "Queensdale Road, Shepherd's Bush                     1\n",
       "Torrens Street, Angel                                1\n",
       "Lambeth Road, Vauxhall                               1\n",
       "Columbia Road, Shoreditch                            1\n",
       "Sumner Place, South Kensington                       1\n",
       "Carey Street, Holborn                                1\n",
       "Southwark Street, Bankside                           1\n",
       "Harrington Square 1, Camden Town                     1\n",
       "Embankment (Savoy), Strand                           1\n",
       "Lord's, St. John's Wood                              1\n",
       "Harrington Square 2, Camden Town                     1\n",
       "Mudchute DLR, Cubitt Town                            1\n",
       "Sail Street, Vauxhall                                1\n",
       "Tanner Street, Bermondsey                            1\n",
       "Maclise Road, Olympia                                1\n",
       "Old Street Station, St. Luke's                       1\n",
       "Durant Street, Bethnal Green                         1\n",
       "Charing Cross Hospital, Hammersmith                  1\n",
       "Finsbury Circus, Liverpool Street                    1\n",
       "Queen's Gate (South), South Kensington               1\n",
       "Lower Thames Street, Monument                        1\n",
       "York Way, Kings Cross                                1\n",
       "Crabtree Lane, Fulham                                1\n",
       "Thorndike Close, West Chelsea                        1\n",
       "West Kensington Station, West Kensington             1\n",
       "Christopher Street, Liverpool Street                 1\n",
       "Page Street, Westminster                             1\n",
       "Vauxhall Walk, Vauxhall                              1\n",
       "Curzon Street, Mayfair                               1\n",
       "LSBU (Borough Road), Elephant & Castle               1\n",
       "Manbre Road, Hammersmith                             1\n",
       "Newby Place, Poplar                                  1\n",
       "Royal London Hospital, Whitechapel                   1\n",
       "Goldsmith's Row, Haggerston                          1\n",
       "Heath Road, Battersea                                1\n",
       "Here East North, Queen Elizabeth Olympic Park        1\n",
       "Snow Hill, Farringdon                                1\n",
       "Spanish Road, Clapham Junction                       1\n",
       "Moor Street, Soho                                    1\n",
       "Eversholt Street , Camden Town                       1\n",
       "Stamford Street, South Bank                          1\n",
       "Wright's Lane, Kensington                            1\n",
       "Gunmakers Lane, Old Ford                             1\n",
       "Blythe Road West, Shepherd's Bush                    1\n",
       "Knightsbridge, Hyde Park                             1\n",
       "Queen's Gate (North), Kensington                     1\n",
       "Culvert Road, Battersea                              1\n",
       "Tallis Street, Temple                                1\n",
       "Abingdon Green, Westminster                          1\n",
       "Bell Street , Marylebone                             1\n",
       "Clinton Road, Mile End                               1\n",
       "Warwick Avenue Station, Maida Vale                   1\n",
       "Bonner Gate, Victoria Park                           1\n",
       "Santos Road, Wandsworth                              1\n",
       "Fashion Street, Whitechapel                          1\n",
       "Great Titchfield Street, Fitzrovia                   1\n",
       "Twig Folly Bridge, Mile End                          1\n",
       "Ormonde Gate, Chelsea                                1\n",
       "Haggerston Road, Haggerston                          1\n",
       "Hartington Road, Stockwell                           1\n",
       "Upper Grosvenor Street, Mayfair                      1\n",
       "Bermondsey Street, Bermondsey                        1\n",
       "Roscoe Street, St. Luke's                            1\n",
       "Hewison Street, Old Ford                             1\n",
       "William Morris Way, Sands End                        1\n",
       "Ferndale Road, Brixton                               1\n",
       "Killick Street, King's Cross                         1\n",
       "Gloucester Road (Central), South Kensington          1\n",
       "Sardinia Street, Holborn                             1\n",
       "Evesham Street, Avondale                             1\n",
       "Farm Street, Mayfair                                 1\n",
       "Stanhope Gate, Mayfair                               1\n",
       "Woodstock Street, Mayfair                            1\n",
       "Colombo Street, Southwark                            1\n",
       "Paddington Green, Paddington                         1\n",
       "All Saints' Road, Portobello                         1\n",
       "Bow Road Station, Bow                                1\n",
       "Grenfell Road, Avondale                              1\n",
       "Regent's Row , Haggerston                            1\n",
       "Baldwin Street, St. Luke's                           1\n",
       "Garnet Street, Shadwell                              1\n",
       "Castlehaven Road, Camden Town                        1\n",
       "Marloes Road, Kensington                             1\n",
       "Derry Street, Kensington                             1\n",
       "Grosvenor Crescent, Belgravia                        1\n",
       "Regency Street, Westminster                          1\n",
       "Aintree Street, Fulham                               1\n",
       "Ethelburga Estate, Battersea Park                    1\n",
       "Ravenscourt Park Station, Hammersmith                1\n",
       "Stebondale Street, Cubitt Town                       1\n",
       "Buckingham Gate, Westminster                         1\n",
       "Crosswall, Tower                                     1\n",
       "Here East South, Queen Elizabeth Olympic Park        1\n",
       "York Hall, Bethnal Green                             1\n",
       "Felsham Road, Putney                                 1\n",
       "Drayton Gardens, West Chelsea                        1\n",
       "Olympia Way, Olympia                                 1\n",
       "The Vale, Chelsea                                    1\n",
       "Houndsditch, Aldgate                                 1\n",
       "Parsons Green Station, Parsons Green                 1\n",
       "Naval Row, Blackwall                                 1\n",
       "De Vere Gardens, Kensington                          1\n",
       "Caldwell Street, Stockwell                           1\n",
       "East Village, Queen Elizabeth Olympic Park           1\n",
       "Wormwood Street, Liverpool Street                    1\n",
       "Waterloo Station 1, Waterloo                         1\n",
       "Bury Place, Holborn                                  1\n",
       "Archbishop's Park, Waterloo                          1\n",
       "Pennington Street, Wapping                           1\n",
       "Wellington Row, Bethnal Green                        1\n",
       "Belvedere Road 1, South Bank                         1\n",
       "Triangle Car Park, Hyde Park                         1\n",
       "North Audley Street, Mayfair                         1\n",
       "Clifton Road, Maida Vale                             1\n",
       "St. Mary & St. Michael Church, Stepney               1\n",
       "Barbican Centre, Barbican                            1\n",
       "Golden Lane, Barbican                                1\n",
       "Brunswick Square, Bloomsbury                         1\n",
       "Wellington Arch, Hyde Park                           1\n",
       "Charles II Street, West End                          1\n",
       "Alpha Grove, Millwall                                1\n",
       "Westbourne Grove, Bayswater                          1\n",
       "Soho Square , Soho                                   1\n",
       "Globe Town Market, Bethnal Green                     1\n",
       "Westferry DLR, Limehouse                             1\n",
       "Queen Street 1, Bank                                 1\n",
       "Palace Gate, Kensington Gardens                      1\n",
       "Binfield Road, Stockwell                             1\n",
       "Gloucester Street, Pimlico                           1\n",
       "Stainsby Road , Poplar                               1\n",
       "Napier Avenue, Millwall                              1\n",
       "Chadwell Street, Angel                               1\n",
       "Normandy Road, Stockwell                             1\n",
       "Butler Place, Westminster                            1\n",
       "Ram Street, Wandsworth                               1\n",
       "Canton Street, Poplar                                1\n",
       "Empire Square, The Borough                           1\n",
       "Tooley Street, Bermondsey                            1\n",
       "Lansdowne Walk, Ladbroke Grove                       1\n",
       "Bedford Way, Bloomsbury                              1\n",
       "Kingsway Southbound, Strand                          1\n",
       "Museum of London, Barbican                           1\n",
       "Warwick Road, Olympia                                1\n",
       "Euston Square Gardens, Euston                        1\n",
       "Westfield Southern Terrace ,Shepherd's Bush          1\n",
       "Long Lane , Bermondsey                               1\n",
       "Concert Hall Approach 1, South Bank                  1\n",
       "Natural History Museum, South Kensington             1\n",
       "Blenheim Crescent, Ladbroke Grove                    1\n",
       "Reardon Street, Wapping                              1\n",
       "Great Dover Street, The Borough                      1\n",
       "Storey's Gate, Westminster                           1\n",
       "Cromer Street, Bloomsbury                            1\n",
       "Elizabeth Bridge, Victoria                           1\n",
       "Halford Road, West Kensington                        1\n",
       "Ilchester Place, Kensington                          1\n",
       "Albany Street, The Regent's Park                     1\n",
       "Vereker Road, West Kensington                        1\n",
       "Risinghill Street, Angel                             1\n",
       "Earnshaw Street , Covent Garden                      1\n",
       "Shoreditch High Street, Shoreditch                   1\n",
       "Greenland Road, Camden Town                          1\n",
       "Royal College Street, Camden Town                    1\n",
       "Rainville Road, Hammersmith                          1\n",
       "St. Chad's Street, King's Cross                      1\n",
       "Fire Brigade Pier, Vauxhall                          1\n",
       "Manresa Road, Chelsea                                1\n",
       "Irene Road, Parsons Green                            1\n",
       "Westminster University, Marylebone                   1\n",
       "Jubilee Gardens, South Bank                          1\n",
       "Walmer Road, Avondale                                1\n",
       "Tower Gardens , Tower                                1\n",
       "Teviot Street, Poplar                                1\n",
       "Lollard Street, Vauxhall                             1\n",
       "Queen's Gate, Kensington Gardens                     1\n",
       "Grafton Street, Mayfair                              1\n",
       "Phillimore Gardens, Kensington                       1\n",
       "Esmond Street, Putney                                1\n",
       "Rotherhithe Roundabout, Rotherhithe                  1\n",
       "St. John's Road, Clapham Junction                    1\n",
       "Kingsway, Covent Garden                              1\n",
       "South Audley Street, Mayfair                         1\n",
       "Blackfriars Station, St. Paul's                      1\n",
       "Vicarage Crescent, Battersea                         1\n",
       "Kennington Station, Kennington                       1\n",
       "Russell Gardens, Olympia                             1\n",
       "Stepney Green Station, Stepney                       1\n",
       "Bevington Road West, North Kensington                1\n",
       "Watney Market, Stepney                               1\n",
       "Knaresborough Place, Earl's Court                    1\n",
       "Lambeth North Station, Waterloo                      1\n",
       "Aylward Street, Stepney                              1\n",
       "Great Suffolk Street, The Borough                    1\n",
       "Usk Road, Clapham Junction                           1\n",
       "Lansdowne Road, Ladbroke Grove                       1\n",
       "Ranelagh Gardens, Fulham                             1\n",
       "Lancaster Gate , Bayswater                           1\n",
       "St. Martin's Street, West End                        1\n",
       "Imperial Road, Sands End                             1\n",
       "Jubilee Plaza, Canary Wharf                          1\n",
       "Margery Street, Clerkenwell                          1\n",
       "Normand Park, West Kensington                        1\n",
       "Elysium Place, Fulham                                1\n",
       "Merchant Street, Bow                                 1\n",
       "Chepstow Villas, Notting Hill                        1\n",
       "Coram Street, Bloomsbury                             1\n",
       "Bishop's Avenue, Fulham                              1\n",
       "Kennington Road Post Office, Oval                    1\n",
       "Bramham Gardens, Earl's Court                        1\n",
       "Seville Street, Knightsbridge                        1\n",
       "Scala Street, Fitzrovia                              1\n",
       "Clarendon Road, Avondale                             1\n",
       "Warwick Row, Westminster                             1\n",
       "Upper Richmond Road, Putney                          1\n",
       "London Zoo Car Park, The Regent's Park               1\n",
       "Tyers Gate, Bermondsey                               1\n",
       "Westbridge Road, Battersea                           1\n",
       "Fisherman's Walk West, Canary Wharf                  1\n",
       "Baker Street, Marylebone                             1\n",
       "New Cavendish Street, Marylebone                     1\n",
       "Braham Street, Aldgate                               1\n",
       "Antill Road, Mile End                                1\n",
       "British Museum, Bloomsbury                           1\n",
       "Porchester Place, Paddington                         1\n",
       "Royal Avenue 2, Chelsea                              1\n",
       "Greyhound Road, Hammersmith                          1\n",
       "Portman Square, Marylebone                           1\n",
       "Battersea Church Road, Battersea                     1\n",
       "Emperor's Gate, South Kensington                     1\n",
       "Bankside Mix, Bankside                               1\n",
       "Wellington Street , Strand                           1\n",
       "Abbey Orchard Street, Westminster                    1\n",
       "Walnut Tree Walk, Vauxhall                           1\n",
       "Green Park Station, Mayfair                          1\n",
       "South Parade, Chelsea                                1\n",
       "Ansell House, Stepney                                1\n",
       "Boston Place, Marylebone                             1\n",
       "Waterloo Place, St. James's                          1\n",
       "Fournier Street, Whitechapel                         1\n",
       "Wendon Street, Old Ford                              1\n",
       "St John's Crescent, Brixton                          1\n",
       "Cleveland Way, Stepney                               1\n",
       "Greenberry Street, St.John's Wood                    1\n",
       "Watney Street, Shadwell                              1\n",
       "St. Mark's Road, North Kensington                    1\n",
       "Fanshaw Street, Hoxton                               1\n",
       "Brick Lane Market, Shoreditch                        1\n",
       "Bishop's Bridge Road East, Bayswater                 1\n",
       "Vauxhall Street, Vauxhall                            1\n",
       "Wapping High Street, Wapping                         1\n",
       "Clifford Street, Mayfair                             1\n",
       "Good's Way, King's Cross                             1\n",
       "Lavington Street, Bankside                           1\n",
       "Exhibition Road Museums 1, South Kensington          1\n",
       "Holland Park, Kensington                             1\n",
       "Orbel Street, Battersea                              1\n",
       "Duke Street Hill, London Bridge                      1\n",
       "Bridge Avenue, Hammersmith                           1\n",
       "Bradmead, Battersea Park                             1\n",
       "Lincoln's Inn Fields, Holborn                        1\n",
       "Red Lion Square, Holborn                             1\n",
       "Danvers Street, West Chelsea                         1\n",
       "Little Brook Green, Brook Green                      1\n",
       "Jubilee Street, Stepney                              1\n",
       "Selby Street, Whitechapel                            1\n",
       "Clarges Street, Mayfair                              1\n",
       "St. Katharine's Way, Tower                           1\n",
       "Foley Street, Fitzrovia                              1\n",
       "Edgware Road Station, Marylebone                     1\n",
       "Eaton Square (South), Belgravia                      1\n",
       "Stonecutter Street, Holborn                          1\n",
       "Russell Square Station, Bloomsbury                   1\n",
       "Fore Street, Guildhall                               1\n",
       "East India DLR, Blackwall                            1\n",
       "Bell Lane, Liverpool Street                          1\n",
       "Hermitage Court, Wapping                             1\n",
       "Maida Vale, Maida Vale                               1\n",
       "Hortensia Road, West Brompton                        1\n",
       "Dunston Road , Haggerston                            1\n",
       "Cheapside, Bank                                      1\n",
       "Prince of Wales Drive, Battersea Park                1\n",
       "Craven Street, Strand                                1\n",
       "Freston Road, Avondale                               1\n",
       "Cadogan Place, Knightsbridge                         1\n",
       "Malmesbury Road, Bow                                 1\n",
       "Ingrave Street, Clapham Junction                     1\n",
       "Gwendwr Road, West Kensington                        1\n",
       "Finlay Street, Fulham                                1\n",
       "Imperial Wharf Station, Sands End                    1\n",
       "St. George Street, Mayfair                           1\n",
       "Devons Road, Bow                                     1\n",
       "West Cromwell Road, Earl's Court                     1\n",
       "Sidney Road, Stockwell                               1\n",
       "Belgrave Road, Victoria                              1\n",
       "Silverthorne Road, Battersea                         1\n",
       "Philpot Street, Whitechapel                          1\n",
       "Denyer Street, Knightsbridge                         1\n",
       "Gloucester Road Station, South Kensington            1\n",
       "Mallory Street, Marylebone                           1\n",
       "Ontario Street, Elephant & Castle                    1\n",
       "Kennington Cross, Kennington                         1\n",
       "Prince Albert Road, The Regent's Park                1\n",
       "Mexfield Road, East Putney                           1\n",
       "Sutton Street, Shadwell                              1\n",
       "Victoria & Albert Museum, South Kensington           1\n",
       "Arlington Road, Camden Town                          1\n",
       "Aston Street, Stepney                                1\n",
       "Eel Brook Common, Walham Green                       1\n",
       "Palissy Street, Shoreditch                           1\n",
       "Warren Street Station, Euston                        1\n",
       "Hollybush Gardens, Bethnal Green                     1\n",
       "Wood Street, Guildhall                               1\n",
       "South Lambeth Road, Vauxhall                         1\n",
       "Shoreditch Park, Hoxton                              1\n",
       "Sirdar Road, Avondale                                1\n",
       "Hurlingham Park, Parsons Green                       1\n",
       "Finsbury Square , Moorgate                           1\n",
       "Temple Gardens, Temple                               1\n",
       "Nevern Place, Earl's Court                           1\n",
       "Drummond Street , Euston                             1\n",
       "Birkenhead Street, King's Cross                      1\n",
       "London Zoo,  The Regent's Park                       1\n",
       "Northdown Street, King's Cross                       1\n",
       "Graham Street, Angel                                 1\n",
       "Woodstock Grove, Shepherd's Bush                     1\n",
       "Rectory Square, Stepney                              1\n",
       "Nutford Place, Marylebone                            1\n",
       "Westferry Circus, Canary Wharf                       1\n",
       "Beryl Road, Hammersmith                              1\n",
       "Alderney Street, Pimlico                             1\n",
       "Gloucester Avenue, Camden Town                       1\n",
       "Sloane Avenue, Knightsbridge                         1\n",
       "Upper Bank Street, Canary Wharf                      1\n",
       "Somerset House, Strand                               1\n",
       "Nesham Street, Wapping                               1\n",
       "Dorothy Road, Clapham Junction                       1\n",
       "The Guildhall, Guildhall                             1\n",
       "Queensway, Kensington Gardens                        1\n",
       "Golden Square, Soho                                  1\n",
       "Poured Lines, Bankside                               1\n",
       "Wenlock Road , Hoxton                                1\n",
       "BBC White City, White City                           1\n",
       "Aberdeen Place, St. John's Wood                      1\n",
       "Coomer Place, West Kensington                        1\n",
       "World's End Place, West Chelsea                      1\n",
       "Riverlight North, Nine Elms                          1\n",
       "Guilford Street , Bloomsbury                         1\n",
       "Rampayne Street, Pimlico                             1\n",
       "Crawford Street, Marylebone                          1\n",
       "Macclesfield Rd, St Lukes                            1\n",
       "Lots Road, West Chelsea                              1\n",
       "Dickens Square, Borough                              1\n",
       "Southern Grove, Bow                                  1\n",
       "Holborn Circus, Holborn                              1\n",
       "Abbotsbury Road, Holland Park                        1\n",
       "Buxton Street 1, Shoreditch                          1\n",
       "Southwark Station 1, Southwark                       1\n",
       "Hoxton Station, Hoxton                               1\n",
       "South Wharf Road, Paddington                         1\n",
       "Clerkenwell Green, Clerkenwell                       1\n",
       "Pembridge Villas, Notting Hill                       1\n",
       "Thurtle Road, Haggerston                             1\n",
       "Vincent Square, Westminster                          1\n",
       "Broadley Terrace, Marylebone                         1\n",
       "Saltoun Road, Brixton                                1\n",
       "Charlotte Street, Fitzrovia                          1\n",
       "Putney Pier, Wandsworth                              1\n",
       "Plough Terrace, Clapham Junction                     1\n",
       "Sadlers Sports Centre, Finsbury                      1\n",
       "Maplin Street, Mile End                              1\n",
       "Albert Gardens, Stepney                              1\n",
       "Prince Consort Road, Knightsbridge                   1\n",
       "Cloudesley Road, Angel                               1\n",
       "Malet Street, Bloomsbury                             1\n",
       "Paddington Street, Marylebone                        1\n",
       "LMU Commercial Road, Whitechapel                     1\n",
       "Beaumont Street, Marylebone                          1\n",
       "Black Prince Road, Vauxhall                          1\n",
       "Colet Gardens, Hammersmith                           1\n",
       "Queensbridge Road, Haggerston                        1\n",
       "Ashley Place, Victoria                               1\n",
       "Pont Street, Knightsbridge                           1\n",
       "Belford House, Haggerston                            1\n",
       "Monier Road, Hackney Wick                            1\n",
       "Taviton Street, Bloomsbury                           1\n",
       "Pindar Street, Liverpool Street                      1\n",
       "Orsett Terrace, Bayswater                            1\n",
       "Cleveland Gardens, Bayswater                         1\n",
       "Bethnal Green Road, Shoreditch                       1\n",
       "Westbourne Park Road, Portobello                     1\n",
       "Finnis Street, Bethnal Green                         1\n",
       "Doddington Grove, Kennington                         1\n",
       "Everington Street, Fulham                            1\n",
       "Aldersgate Street, Barbican                          1\n",
       "Old Montague Street, Whitechapel                     1\n",
       "Walworth Square, Walworth                            1\n",
       "Riverlight South, Nine Elms                          1\n",
       "Brook Green South, Brook Green                       1\n",
       "Eccleston Place, Victoria                            1\n",
       "Princedale Road , Holland Park                       1\n",
       "Harford Street, Mile End                             1\n",
       "Pritchard's Road, Bethnal Green                      1\n",
       "High Holborn , Covent Garden                         1\n",
       "East Road, Hoxton                                    1\n",
       "Guildhouse Street, Victoria                          1\n",
       "New Road 1 , Whitechapel                             1\n",
       "Pott Street, Bethnal Green                           1\n",
       "Hawley Crescent, Camden Town                         1\n",
       "Finsbury Library , Finsbury                          1\n",
       "Percival Street, Finsbury                            1\n",
       "Goswell Road (City Uni), Finsbury                    1\n",
       "Parson's Green , Parson's Green                      1\n",
       "Handyside Street, King's Cross                       1\n",
       "Swan Street, The Borough                             1\n",
       "Import Dock, Canary Wharf                            1\n",
       "Curlew Street, Shad Thames                           1\n",
       "Ashley Crescent, Battersea                           1\n",
       "St. Bride Street, Holborn                            1\n",
       "Vauxhall Bridge , Pimlico                            1\n",
       "Westminster Bridge Road, Elephant & Castle           1\n",
       "Vincent Street, Pimlico                              1\n",
       "Bricklayers Arms, Borough                            1\n",
       "St. James's Square, St. James's                      1\n",
       "Waterloo Road, South Bank                            1\n",
       "St. John's Wood Road, St. John's Wood                1\n",
       "Victory Place, Walworth                              1\n",
       "Albert Square, Stockwell                             1\n",
       "Lexham Gardens, Kensington                           1\n",
       "Crisp Road, Hammersmith                              1\n",
       "Arundel Street, Temple                               1\n",
       "Argyll Road, Kensington                              1\n",
       "Neville Gill Close, Wandsworth                       1\n",
       "Podium, Queen Elizabeth Olympic Park                 1\n",
       "Gaywood  Street, Elephant & Castle                   1\n",
       "Allington Street, Victoria                           1\n",
       "Frith Street, Soho                                   1\n",
       "New Inn Yard, Shoreditch                             1\n",
       "Wandsworth Rd, Isley Court, Wandsworth Road          1\n",
       "Sugden Road, Clapham                                 1\n",
       "Strata, Elephant & Castle                            1\n",
       "Kensington Olympia Station, Olympia                  1\n",
       "Sea Containers, South Bank                           1\n",
       "Rodney Road , Walworth                               1\n",
       "North Wharf Road, Paddington                         1\n",
       "Webber Street , Southwark                            1\n",
       "Putney Bridge Station, Fulham                        1\n",
       "Rathbone Street, Fitzrovia                           1\n",
       "Great Marlborough Street, Soho                       1\n",
       "Union Street, The Borough                            1\n",
       "Lindfield Street, Poplar                             1\n",
       "Erin Close, Walham Green                             1\n",
       "Sopwith Way, Battersea Park                          1\n",
       "New North Road 2, Hoxton                             1\n",
       "Spindrift Avenue, Millwall                           1\n",
       "Wren Street, Holborn                                 1\n",
       "Grant Road East, Clapham Junction                    1\n",
       "Turquoise Island, Notting Hill                       1\n",
       "Wynne Road, Stockwell                                1\n",
       "Grosvenor Square, Mayfair                            1\n",
       "Millennium Hotel, Mayfair                            1\n",
       "Harcourt Terrace, West Brompton                      1\n",
       "River Street , Clerkenwell                           1\n",
       "City Road, Angel                                     1\n",
       "Ackroyd Drive, Bow                                   1\n",
       "Whitehall Place, Strand                              1\n",
       "Little Argyll Street, West End                       1\n",
       "Wardour Street, Soho                                 1\n",
       "Hereford Road, Bayswater                             1\n",
       "Fulham Broadway, Walham Green                        1\n",
       "Rifle Place, Avondale                                1\n",
       "Teversham Lane, Stockwell                            1\n",
       "Union Grove, Wandsworth Road                         1\n",
       "Theobald's Road , Holborn                            1\n",
       "Broadwick Street, Soho                               1\n",
       "Grosvenor Road, Pimlico                              1\n",
       "Red Lion Street, Holborn                             1\n",
       "Charlbert Street, St. John's Wood                    1\n",
       "New Spring Gardens Walk, Vauxhall                    1\n",
       "Liverpool Road (N1 Centre), Angel                    1\n",
       "Falcon Road, Clapham Junction                        1\n",
       "Pitfield Street North,Hoxton                         1\n",
       "Windsor Terrace, Hoxton                              1\n",
       "Cantrell Road, Bow                                   1\n",
       "Ilchester Gardens, Bayswater                         1\n",
       "Cadogan Close, Victoria Park                         1\n",
       "Vicarage Gate, Kensington                            1\n",
       "Princes Square, Bayswater                            1\n",
       "Worship Street, Shoreditch                           1\n",
       "Albert Embankment, Vauxhall                          1\n",
       "Eaton Square, Belgravia                              1\n",
       "Sackville Street, Mayfair                            1\n",
       "Smith Square, Westminster                            1\n",
       "Jubilee Crescent, Cubitt Town                        1\n",
       "Kensington Town Hall, Kensington                     1\n",
       "Simpson Street, Clapham Junction                     1\n",
       "Horseferry Road, Westminster                         1\n",
       "George Street, Marylebone                            1\n",
       "Barons Court Station, West Kensington                1\n",
       "George Row, Bermondsey                               1\n",
       "Greycoat Street , Westminster                        1\n",
       "Heron Quays DLR, Canary Wharf                        1\n",
       "Bourne Street, Belgravia                             1\n",
       "Fulham Park Road, Fulham                             1\n",
       "Store Street, Bloomsbury                             1\n",
       "Tysoe Street, Clerkenwell                            1\n",
       "Gloucester Terrace, Bayswater                        1\n",
       "Westfield Ariel Way, White City                      1\n",
       "Howick Place, Westminster                            1\n",
       "Trebovir Road, Earl's Court                          1\n",
       "Hatton Wall, Holborn                                 1\n",
       "Berry Street, Clerkenwell                            1\n",
       "Bow Church Station, Bow                              1\n",
       "Westminster Pier, Westminster                        1\n",
       "Kensington Gore, Knightsbridge                       1\n",
       "Monument Street, Monument                            1\n",
       "Cephas Street, Bethnal Green                         1\n",
       "Moorfields, Moorgate                                 1\n",
       "Kennington Road  , Vauxhall                          1\n",
       "Leonard Circus , Shoreditch                          1\n",
       "St. George's Square, Pimlico                         1\n",
       "Aberfeldy Street, Poplar                             1\n",
       "Ashmole Estate, Oval                                 1\n",
       "Park Street, Bankside                                1\n",
       "Fawcett Close, Battersea                             1\n",
       "Great Russell Street, Bloomsbury                     1\n",
       "Breams Buildings, Holborn                            1\n",
       "The Tennis Courts, The Regent's Park                 1\n",
       "Doric Way , Somers Town                              1\n",
       "Michael Road, Walham Green                           1\n",
       "Longford Street, The Regent's Park                   1\n",
       "Courland Grove, Wandsworth Road                      1\n",
       "New North Road 1, Hoxton                             1\n",
       "Northumberland Avenue, Strand                        1\n",
       "Park Lane , Hyde Park                                1\n",
       "Sheepcote Lane, Battersea                            1\n",
       "Carnegie Street, King's Cross                        1\n",
       "Bancroft Road, Bethnal Green                         1\n",
       "Farringdon Lane, Clerkenwell                         1\n",
       "King Edward Walk, Waterloo                           1\n",
       "Frampton Street, Paddington                          1\n",
       "Oxford Road, Putney                                  1\n",
       "Bonny Street, Camden Town                            1\n",
       "Central House, Aldgate                               1\n",
       "Queen's Gate (Central), South Kensington             1\n",
       "Morie Street, Wandsworth                             1\n",
       "Endsleigh Gardens, Euston                            1\n",
       "Brushfield Street, Liverpool Street                  1\n",
       "Exhibition Road, Knightsbridge                       1\n",
       "Belgrave Square, Belgravia                           1\n",
       "Bolsover Street, Fitzrovia                           1\n",
       "Osiers Road, Wandsworth                              1\n",
       "Queen's Circus, Battersea Park                       1\n",
       "Saunders Ness Road, Cubitt Town                      1\n",
       "Murray Grove , Hoxton                                1\n",
       "New Fetter Lane, Holborn                             1\n",
       "Austin Road, Battersea Park                          1\n",
       "Green Street, Mayfair                                1\n",
       "Tate Modern, Bankside                                1\n",
       "Peterborough Road, Sands End                         1\n",
       "Montpelier Street, Knightsbridge                     1\n",
       "Snowsfields, London Bridge                           1\n",
       "Warwick Square, Pimlico                              1\n",
       "Concert Hall Approach 2, South Bank                  1\n",
       "King Edward Street, St Pauls                         1\n",
       "Queen Mary's, Mile End                               1\n",
       "Finsbury Leisure Centre, St. Luke's                  1\n",
       "Lee Valley VeloPark, Queen Elizabeth Olympic Park    1\n",
       "Hibbert Street, Battersea                            1\n",
       "Lightermans Road, Millwall                           1\n",
       "Kennington Oval, Oval                                1\n",
       "Dorset Square, Marylebone                            1\n",
       "Hampstead Road, Euston                               1\n",
       "Chapel Place, Marylebone                             1\n",
       "Wells Street, Fitzrovia                              1\n",
       "Lambeth Palace Road, Waterloo                        1\n",
       "Harper Road, The Borough                             1\n",
       "Hatton Garden, Holborn                               1\n",
       "Shadwell Station, Shadwell                           1\n",
       "St Mary's Hospital, Paddington                       1\n",
       "Gloucester Road (North), Kensington                  1\n",
       "Lower Marsh, Waterloo                                1\n",
       "Bishop's Bridge Road West, Bayswater                 1\n",
       "Preston's Road, Cubitt Town                          1\n",
       "Sandilands Road, Walham Green                        1\n",
       "Chancery Lane, Holborn                               1\n",
       "Stewart's Road, Wandsworth Road                      1\n",
       "Collingham Gardens, Earl's Court                     1\n",
       "New Kent Road, The Borough                           1\n",
       "Mostyn Grove, Bow                                    1\n",
       "Queen Street 2, Bank                                 1\n",
       "Clarence Walk, Stockwell                             1\n",
       "Exhibition Road Museums 2, South Kensington          1\n",
       "Chelsea Bridge, Pimlico                              1\n",
       "Salmon Lane, Limehouse                               1\n",
       "Nantes Close, Wandsworth                             1\n",
       "Hop Exchange, The Borough                            1\n",
       "Fore Street Avenue, Guildhall                        1\n",
       "Newton Street, Covent Garden                         1\n",
       "Phene Street, Chelsea                                1\n",
       "Stephendale Road, Sands End                          1\n",
       "Battersea Power Station, Battersea Park              1\n",
       "Clapham Road, Lingham Street, Stockwell              1\n",
       "Devonshire Square, Liverpool Street                  1\n",
       "St. Mary Axe, Aldgate                                1\n",
       "Flood Street, Chelsea                                1\n",
       "Old Quebec Street, Marylebone                        1\n",
       "Spencer Park, Wandsworth Common                      1\n",
       "Star Road, West Kensington                           1\n",
       "Christian Street, Whitechapel                        1\n",
       "Southampton Street, Strand                           1\n",
       "Kensington Church Street, Kensington                 1\n",
       "Abingdon Villas, Kensington                          1\n",
       "Cheshire Street, Bethnal Green                       1\n",
       "Great Percy Street, Clerkenwell                      1\n",
       "Ossulston Street, Somers Town                        1\n",
       "George Place Mews, Marylebone                        1\n",
       "Stanley Grove, Battersea                             1\n",
       "Tachbrook Street, Victoria                           1\n",
       "Battersea Park Road, Nine Elms                       1\n",
       "Bank of England Museum, Bank                         1\n",
       "Smugglers Way, Wandsworth                            1\n",
       "Rochester Row, Westminster                           1\n",
       "Southerton Road, Hammersmith                         1\n",
       "Hyde Park Corner, Hyde Park                          1\n",
       "Aquatic Centre, Queen Elizabeth Olympic Park         1\n",
       "Dock Street, Wapping                                 1\n",
       "Shouldham Street, Marylebone                         1\n",
       "Seymour Place, Marylebone                            1\n",
       "Whiston Road, Haggerston                             1\n",
       "Limerston Street, West Chelsea                       1\n",
       "Penywern Road, Earl's Court                          1\n",
       "Ada Street, Hackney Central                          1\n",
       "Bouverie Street, Temple                              1\n",
       "Rossmore Road, Marylebone                            1\n",
       "St Martins Close, Camden Town                        1\n",
       "Ampton Street , Clerkenwell                          1\n",
       "Bromley High Street, Bow                             1\n",
       "Parkway, Camden Town                                 1\n",
       "Blackfriars Road, Southwark                          1\n",
       "Borough High Street, The Borough                     1\n",
       "St. Peter's Terrace, Fulham                          1\n",
       "Belgrove Street , King's Cross                       1\n",
       "Charlotte Terrace, Angel                             1\n",
       "Southampton Place, Holborn                           1\n",
       "Old Brompton Road, South Kensington                  1\n",
       "Cranmer Road, Stockwell                              1\n",
       "Hoxton Street, Hoxton                                1\n",
       "Falkirk Street, Hoxton                               1\n",
       "Shoreditch Court, Haggerston                         1\n",
       "New Globe Walk, Bankside                             1\n",
       "Limburg Road, Clapham Junction                       1\n",
       "Wapping Lane, Wapping                                1\n",
       "Grove End Road, St. John's Wood                      1\n",
       "Clarkson Street, Bethnal Green                       1\n",
       "Cotton Garden Estate, Kennington                     1\n",
       "Jewry Street, Aldgate                                1\n",
       "Lancaster Drive, Blackwall                           1\n",
       "Victoria Park Road, Hackney Central                  1\n",
       "Devonshire Terrace, Bayswater                        1\n",
       "Clapham Common North Side, Clapham Common            1\n",
       "Great Tower Street, Monument                         1\n",
       "South Park, Sands End                                1\n",
       "Millharbour, Millwall                                1\n",
       "Hinde Street, Marylebone                             1\n",
       "Abyssinia Close, Clapham Junction                    1\n",
       "Albert Bridge Road, Battersea Park                   1\n",
       "Milroy Walk, South Bank                              1\n",
       "Sedding Street, Sloane Square                        1\n",
       "Flamborough Street, Limehouse                        1\n",
       "Islington Green, Angel                               1\n",
       "Hertford Road, De Beauvoir Town                      1\n",
       "Ford Road, Old Ford                                  1\n",
       "Wandsworth Town Station, Wandsworth                  1\n",
       "Langdon Park, Poplar                                 1\n",
       "Chesilton Road, Fulham                               1\n",
       "Borough Road, Elephant & Castle                      1\n",
       "Pancras Road, King's Cross                           1\n",
       "Southwick Street, Paddington                         1\n",
       "Marylebone Lane, Marylebone                          1\n",
       "Cartwright Gardens , Bloomsbury                      1\n",
       "Driffield Road, Old Ford                             1\n",
       "Park Lane, Mayfair                                   1\n",
       "Holy Trinity Brompton, Knightsbridge                 1\n",
       "Panton Street, West End                              1\n",
       "Old Ford Road, Bethnal Green                         1\n",
       "Hardwick Street, Clerkenwell                         1\n",
       "Penfold Street, Marylebone                           1\n",
       "Drury Lane, Covent Garden                            1\n",
       "Millbank Tower, Pimlico                              1\n",
       "Notting Hill Gate Station, Notting Hill              1\n",
       "Montserrat Road , Putney                             1\n",
       "Cadogan Gardens, Chelsea                             1\n",
       "Queen Mother Sports Centre, Victoria                 1\n",
       "Serpentine Car Park, Hyde Park                       1\n",
       "Chelsea Green, Chelsea                               1\n",
       "Strand, Strand                                       1\n",
       "Hansard Mews, Holland Park                           1\n",
       "Northington Street , Holborn                         1\n",
       "Newgate Street , St. Paul's                          1\n",
       "Surrey Lane, Battersea                               1\n",
       "Albert Gate, Hyde Park                               1\n",
       "Timber Lodge, Queen Elizabeth Olympic Park           1\n",
       "St. John Street, Finsbury                            1\n",
       "Tavistock Street, Covent Garden                      1\n",
       "Bunhill Row, Moorgate                                1\n",
       "Shepherd's Bush Road North, Shepherd's Bush          1\n",
       "Baylis Road, Waterloo                                1\n",
       "Victoria Rise, Clapham Common                        1\n",
       "Pitfield Street Central, Hoxton                      1\n",
       "Leman Street, Aldgate                                1\n",
       "Lisson Grove, St. John's Wood                        1\n",
       "Broomhouse Lane, Parsons Green                       1\n",
       "Richmond Way, Shepherd's Bush                        1\n",
       "Hampton Street, Walworth                             1\n",
       "Vauxhall Cross, Vauxhall                             1\n",
       "Kennington Lane Rail Bridge, Vauxhall                1\n",
       "All Saints Church, Portobello                        1\n",
       "Kings Gate House, Westminster                        1\n",
       "Belvedere Road 2, South Bank                         1\n",
       "Farringdon Street, Holborn                           1\n",
       "South Kensington Station, South Kensington           1\n",
       "West Smithfield Rotunda, Farringdon                  1\n",
       "Imperial College, Knightsbridge                      1\n",
       "Claremont Square, Angel                              1\n",
       "Calshot Street , King's Cross                        1\n",
       "Royal Avenue 1, Chelsea                              1\n",
       "Burdett Road, Mile End                               1\n",
       "Howland Street, Fitzrovia                            1\n",
       "Addison Road, Holland Park                           1\n",
       "Putney Rail Station, Putney                          1\n",
       "Ladbroke Grove Central, Ladbroke Grove               1\n",
       "Putney Bridge Road, East Putney                      1\n",
       "The Metropolitan, Portobello                         1\n",
       "Euston Road, Euston                                  1\n",
       "Bayley Street , Bloomsbury                           1\n",
       "Bath Street, St. Luke's                              1\n",
       "Tavistock Place, Bloomsbury                          1\n",
       "Humbolt Road, Fulham                                 1\n",
       "St. Luke's Church, Chelsea                           1\n",
       "Upcerne Road, West Chelsea                           1\n",
       "Disraeli Road, Putney                                1\n",
       "William IV Street, Strand                            1\n",
       "St. John's Wood Church, The Regent's Park            1\n",
       "Norton Folgate, Liverpool Street                     1\n",
       "Waterloo Station 3, Waterloo                         1\n",
       "South Quay East, Canary Wharf                        1\n",
       "Tower Wharf, Bermondsey                              1\n",
       "Claverton Street, Pimlico                            1\n",
       "Alma Road, Wandsworth                                1\n",
       "Portland Place, Marylebone                           1\n",
       "Crinan Street, King's Cross                          1\n",
       "Gas Holders, Battersea Park                          1\n",
       "Park Road (Baker Street), The Regent's Park          1\n",
       "East Ferry Road, Cubitt Town                         1\n",
       "Sancroft Street, Vauxhall                            1\n",
       "Cleaver Street, Kennington                           1\n",
       "Eagle Wharf Road, Hoxton                             1\n",
       "Clifton Street, Shoreditch                           1\n",
       "Godliman Street, St. Paul's                          1\n",
       "Broadcasting House, Marylebone                       1\n",
       "Name: name, dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"name\"].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "df[\"street\"] = df.name.apply(lambda i: i.split(\",\")[0].strip())\n",
    "df[\"area\"] = df.name.apply(lambda i: i.split(\",\")[1].strip())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "I'm not convinced there's much use to the column updatedDate therefore I will drop it"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(columns=\"updatedDate\", inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>numBikes</th>\n",
       "      <th>numEmptyDocks</th>\n",
       "      <th>installed</th>\n",
       "      <th>locked</th>\n",
       "      <th>installedDate</th>\n",
       "      <th>street</th>\n",
       "      <th>area</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>River Street , Clerkenwell</td>\n",
       "      <td>51.529163</td>\n",
       "      <td>-0.109971</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>2010-07-12 16:08:00</td>\n",
       "      <td>River Street</td>\n",
       "      <td>Clerkenwell</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Phillimore Gardens, Kensington</td>\n",
       "      <td>51.499607</td>\n",
       "      <td>-0.197574</td>\n",
       "      <td>24</td>\n",
       "      <td>13</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>2010-07-08 11:43:00</td>\n",
       "      <td>Phillimore Gardens</td>\n",
       "      <td>Kensington</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>Christopher Street, Liverpool Street</td>\n",
       "      <td>51.521284</td>\n",
       "      <td>-0.084606</td>\n",
       "      <td>1</td>\n",
       "      <td>31</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>2010-07-04 11:46:00</td>\n",
       "      <td>Christopher Street</td>\n",
       "      <td>Liverpool Street</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>St. Chad's Street, King's Cross</td>\n",
       "      <td>51.530059</td>\n",
       "      <td>-0.120974</td>\n",
       "      <td>17</td>\n",
       "      <td>3</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>2010-07-04 11:58:00</td>\n",
       "      <td>St. Chad's Street</td>\n",
       "      <td>King's Cross</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>Sedding Street, Sloane Square</td>\n",
       "      <td>51.493130</td>\n",
       "      <td>-0.156876</td>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>2010-07-04 12:04:00</td>\n",
       "      <td>Sedding Street</td>\n",
       "      <td>Sloane Square</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id                                  name        lat      long  numBikes  \\\n",
       "0   1            River Street , Clerkenwell  51.529163 -0.109971         8   \n",
       "1   2        Phillimore Gardens, Kensington  51.499607 -0.197574        24   \n",
       "2   3  Christopher Street, Liverpool Street  51.521284 -0.084606         1   \n",
       "3   4       St. Chad's Street, King's Cross  51.530059 -0.120974        17   \n",
       "4   5         Sedding Street, Sloane Square  51.493130 -0.156876        26   \n",
       "\n",
       "   numEmptyDocks  installed  locked        installedDate              street  \\\n",
       "0             10       True   False  2010-07-12 16:08:00        River Street   \n",
       "1             13       True   False  2010-07-08 11:43:00  Phillimore Gardens   \n",
       "2             31       True   False  2010-07-04 11:46:00  Christopher Street   \n",
       "3              3       True   False  2010-07-04 11:58:00   St. Chad's Street   \n",
       "4              0       True   False  2010-07-04 12:04:00      Sedding Street   \n",
       "\n",
       "               area  \n",
       "0       Clerkenwell  \n",
       "1        Kensington  \n",
       "2  Liverpool Street  \n",
       "3      King's Cross  \n",
       "4     Sloane Square  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Given that we now have dedicated street and area columns, I will drop the name column."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(columns=\"name\", inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>numBikes</th>\n",
       "      <th>numEmptyDocks</th>\n",
       "      <th>installed</th>\n",
       "      <th>locked</th>\n",
       "      <th>installedDate</th>\n",
       "      <th>street</th>\n",
       "      <th>area</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>51.529163</td>\n",
       "      <td>-0.109971</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>2010-07-12 16:08:00</td>\n",
       "      <td>River Street</td>\n",
       "      <td>Clerkenwell</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>51.499607</td>\n",
       "      <td>-0.197574</td>\n",
       "      <td>24</td>\n",
       "      <td>13</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>2010-07-08 11:43:00</td>\n",
       "      <td>Phillimore Gardens</td>\n",
       "      <td>Kensington</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>51.521284</td>\n",
       "      <td>-0.084606</td>\n",
       "      <td>1</td>\n",
       "      <td>31</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>2010-07-04 11:46:00</td>\n",
       "      <td>Christopher Street</td>\n",
       "      <td>Liverpool Street</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>51.530059</td>\n",
       "      <td>-0.120974</td>\n",
       "      <td>17</td>\n",
       "      <td>3</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>2010-07-04 11:58:00</td>\n",
       "      <td>St. Chad's Street</td>\n",
       "      <td>King's Cross</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>51.493130</td>\n",
       "      <td>-0.156876</td>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>2010-07-04 12:04:00</td>\n",
       "      <td>Sedding Street</td>\n",
       "      <td>Sloane Square</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id        lat      long  numBikes  numEmptyDocks  installed  locked  \\\n",
       "0   1  51.529163 -0.109971         8             10       True   False   \n",
       "1   2  51.499607 -0.197574        24             13       True   False   \n",
       "2   3  51.521284 -0.084606         1             31       True   False   \n",
       "3   4  51.530059 -0.120974        17              3       True   False   \n",
       "4   5  51.493130 -0.156876        26              0       True   False   \n",
       "\n",
       "         installedDate              street              area  \n",
       "0  2010-07-12 16:08:00        River Street       Clerkenwell  \n",
       "1  2010-07-08 11:43:00  Phillimore Gardens        Kensington  \n",
       "2  2010-07-04 11:46:00  Christopher Street  Liverpool Street  \n",
       "3  2010-07-04 11:58:00   St. Chad's Street      King's Cross  \n",
       "4  2010-07-04 12:04:00      Sedding Street     Sloane Square  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Marylebone                      26\n",
       "Holborn                         19\n",
       "Mayfair                         17\n",
       "Westminster                     16\n",
       "Kensington                      15\n",
       "Vauxhall                        15\n",
       "Hoxton                          14\n",
       "Battersea                       14\n",
       "Bethnal Green                   14\n",
       "Bloomsbury                      14\n",
       "South Kensington                12\n",
       "Knightsbridge                   12\n",
       "Fulham                          12\n",
       "Camden Town                     12\n",
       "Pimlico                         12\n",
       "Clapham Junction                11\n",
       "Shoreditch                      11\n",
       "Bow                             11\n",
       "Hammersmith                     11\n",
       "Bayswater                       11\n",
       "King's Cross                    11\n",
       "Wandsworth                      11\n",
       "Chelsea                         11\n",
       "Strand                          11\n",
       "Battersea Park                  10\n",
       "Angel                           10\n",
       "Stockwell                       10\n",
       "Stepney                         10\n",
       "South Bank                      10\n",
       "Clerkenwell                      9\n",
       "Waterloo                         9\n",
       "The Borough                      9\n",
       "Whitechapel                      9\n",
       "Mile End                         9\n",
       "Haggerston                       9\n",
       "Liverpool Street                 8\n",
       "Poplar                           8\n",
       "Paddington                       8\n",
       "Fitzrovia                        8\n",
       "Victoria                         8\n",
       "The Regent's Park                8\n",
       "Hyde Park                        8\n",
       "West Kensington                  8\n",
       "Wapping                          7\n",
       "West Chelsea                     7\n",
       "Canary Wharf                     7\n",
       "Bermondsey                       7\n",
       "Cubitt Town                      7\n",
       "St. John's Wood                  7\n",
       "Avondale                         7\n",
       "Putney                           7\n",
       "Earl's Court                     7\n",
       "Elephant & Castle                7\n",
       "Bankside                         7\n",
       "Soho                             7\n",
       "Queen Elizabeth Olympic Park     7\n",
       "Sands End                        6\n",
       "Shepherd's Bush                  6\n",
       "Covent Garden                    6\n",
       "Aldgate                          6\n",
       "Euston                           6\n",
       "Finsbury                         5\n",
       "Kennington                       5\n",
       "Old Ford                         5\n",
       "Millwall                         5\n",
       "Walham Green                     5\n",
       "Belgravia                        5\n",
       "Southwark                        5\n",
       "Olympia                          5\n",
       "St. Luke's                       5\n",
       "West End                         5\n",
       "Parsons Green                    4\n",
       "Kensington Gardens               4\n",
       "Notting Hill                     4\n",
       "Walworth                         4\n",
       "St. Paul's                       4\n",
       "Shadwell                         4\n",
       "Guildhall                        4\n",
       "Barbican                         4\n",
       "Bank                             4\n",
       "Temple                           4\n",
       "Ladbroke Grove                   4\n",
       "Portobello                       4\n",
       "Holland Park                     4\n",
       "Monument                         3\n",
       "Oval                             3\n",
       "Blackwall                        3\n",
       "Wandsworth Road                  3\n",
       "Moorgate                         3\n",
       "Brixton                          3\n",
       "Tower                            3\n",
       "Limehouse                        3\n",
       "Nine Elms                        3\n",
       "Maida Vale                       3\n",
       "St. James's                      2\n",
       "Farringdon                       2\n",
       "North Kensington                 2\n",
       "Victoria Park                    2\n",
       "West Brompton                    2\n",
       "White City                       2\n",
       "Borough                          2\n",
       "East Putney                      2\n",
       "Clapham Common                   2\n",
       "Somers Town                      2\n",
       "London Bridge                    2\n",
       "Hackney Central                  2\n",
       "Brook Green                      2\n",
       "St Lukes                         1\n",
       "St.John's Wood                   1\n",
       "Shad Thames                      1\n",
       "De Beauvoir Town                 1\n",
       "Wandsworth Common                1\n",
       "Rotherhithe                      1\n",
       "Parson's Green                   1\n",
       "Isley Court                      1\n",
       "St Pauls                         1\n",
       "Kings Cross                      1\n",
       "Clapham                          1\n",
       "Sloane Square                    1\n",
       "Hackney Wick                     1\n",
       "Stratford                        1\n",
       "Lingham Street                   1\n",
       "Name: area, dtype: int64"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"area\"].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see that areas in and around the centre of London tend to have the highest amount of bikes but can confirm this later on when plotting."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1970-01-01 01:00:00    80\n",
       "2010-07-17 19:47:59     5\n",
       "2018-02-07 00:00:00     3\n",
       "2018-02-05 00:00:00     2\n",
       "2012-01-17 09:01:00     2\n",
       "2010-07-15 13:55:00     1\n",
       "2010-07-19 12:03:00     1\n",
       "2013-11-19 15:05:00     1\n",
       "2010-12-06 14:55:00     1\n",
       "2010-07-20 09:27:00     1\n",
       "2012-01-17 09:06:00     1\n",
       "2010-07-21 13:16:00     1\n",
       "2012-02-24 08:22:00     1\n",
       "2010-07-21 16:43:00     1\n",
       "2010-07-23 15:51:00     1\n",
       "2010-07-10 09:06:00     1\n",
       "2010-07-20 13:12:00     1\n",
       "2016-02-29 11:47:00     1\n",
       "2013-11-01 15:25:00     1\n",
       "2010-07-21 15:02:00     1\n",
       "2010-07-16 14:32:00     1\n",
       "2011-03-09 11:13:00     1\n",
       "2013-08-23 12:56:00     1\n",
       "2013-11-14 13:28:00     1\n",
       "2010-07-21 14:53:00     1\n",
       "2010-07-16 17:37:00     1\n",
       "2010-07-21 12:27:00     1\n",
       "2013-10-22 12:33:00     1\n",
       "2016-01-04 09:45:00     1\n",
       "2010-07-14 14:51:00     1\n",
       "2010-07-05 15:50:00     1\n",
       "2011-02-08 16:23:00     1\n",
       "2011-01-27 09:45:00     1\n",
       "2010-07-16 15:23:00     1\n",
       "2011-03-02 14:25:00     1\n",
       "2013-09-26 14:59:00     1\n",
       "2010-07-21 12:42:00     1\n",
       "2010-07-20 10:27:00     1\n",
       "2012-02-02 16:52:00     1\n",
       "2010-07-22 17:35:00     1\n",
       "2012-01-10 13:48:00     1\n",
       "2010-07-15 18:45:00     1\n",
       "2010-07-09 16:02:00     1\n",
       "2020-09-23 11:20:00     1\n",
       "2016-02-08 10:13:00     1\n",
       "2012-01-22 17:56:00     1\n",
       "2010-12-09 13:50:00     1\n",
       "2016-01-14 16:34:00     1\n",
       "2013-09-27 14:35:00     1\n",
       "2011-12-08 16:26:00     1\n",
       "2018-10-31 11:16:00     1\n",
       "2010-07-04 12:10:00     1\n",
       "2011-02-24 11:04:00     1\n",
       "2012-03-05 08:57:00     1\n",
       "2016-01-04 14:36:00     1\n",
       "2010-09-15 09:49:00     1\n",
       "2015-06-26 11:15:00     1\n",
       "2010-07-22 13:10:00     1\n",
       "2010-07-04 11:46:00     1\n",
       "2012-01-09 12:11:00     1\n",
       "2012-01-19 09:33:00     1\n",
       "2011-01-19 09:12:00     1\n",
       "2010-07-07 12:17:00     1\n",
       "2010-11-05 09:56:00     1\n",
       "2011-02-02 12:20:00     1\n",
       "2014-02-26 09:18:00     1\n",
       "2011-02-03 11:18:00     1\n",
       "2013-11-11 10:37:00     1\n",
       "2012-02-02 17:07:00     1\n",
       "2014-03-31 11:42:00     1\n",
       "2012-01-24 09:51:00     1\n",
       "2013-10-15 11:47:00     1\n",
       "2011-04-05 13:23:00     1\n",
       "2012-01-05 06:53:00     1\n",
       "2010-07-22 13:18:00     1\n",
       "2010-07-18 16:24:00     1\n",
       "2016-12-15 13:19:00     1\n",
       "2011-07-07 09:47:00     1\n",
       "2013-10-25 13:49:00     1\n",
       "2010-07-17 12:18:00     1\n",
       "2010-07-18 10:12:00     1\n",
       "2011-03-08 14:01:00     1\n",
       "2013-11-08 13:43:00     1\n",
       "2010-07-10 10:03:00     1\n",
       "2010-07-15 18:48:00     1\n",
       "2010-07-12 16:01:00     1\n",
       "2010-07-19 17:49:00     1\n",
       "2014-02-10 13:30:00     1\n",
       "2013-10-08 09:25:00     1\n",
       "2013-10-11 09:18:00     1\n",
       "2014-01-07 11:31:00     1\n",
       "2013-11-03 10:56:00     1\n",
       "2013-11-14 09:22:00     1\n",
       "2017-08-01 00:45:00     1\n",
       "2010-07-10 15:57:00     1\n",
       "2010-07-21 13:12:00     1\n",
       "2010-07-16 10:38:00     1\n",
       "2013-12-05 10:46:00     1\n",
       "2019-07-24 09:59:00     1\n",
       "2013-10-30 15:41:00     1\n",
       "2016-06-23 22:00:00     1\n",
       "2010-07-22 15:25:00     1\n",
       "2016-03-24 13:04:00     1\n",
       "2013-11-29 12:56:00     1\n",
       "2010-07-07 12:13:00     1\n",
       "2010-07-10 16:05:00     1\n",
       "2011-06-22 10:35:00     1\n",
       "2010-07-16 15:16:00     1\n",
       "2010-07-11 12:24:00     1\n",
       "2010-07-14 11:18:00     1\n",
       "2013-11-07 11:23:00     1\n",
       "2013-11-25 15:52:00     1\n",
       "2010-07-15 17:33:00     1\n",
       "2013-09-30 09:59:00     1\n",
       "2018-02-06 00:00:00     1\n",
       "2014-01-13 15:38:00     1\n",
       "2010-07-23 14:32:00     1\n",
       "2013-11-28 12:02:00     1\n",
       "2010-07-13 17:16:00     1\n",
       "2011-12-22 10:33:00     1\n",
       "2010-07-14 12:02:00     1\n",
       "2013-09-25 13:51:00     1\n",
       "2013-11-28 10:44:00     1\n",
       "2013-12-04 12:25:00     1\n",
       "2010-07-20 10:08:00     1\n",
       "2010-07-19 14:32:00     1\n",
       "2014-03-05 11:20:00     1\n",
       "2013-11-09 13:44:00     1\n",
       "2010-07-22 16:26:00     1\n",
       "2010-07-13 17:27:00     1\n",
       "2013-10-31 09:44:00     1\n",
       "2013-11-13 12:18:00     1\n",
       "2011-03-02 14:34:00     1\n",
       "2010-07-14 10:28:00     1\n",
       "2012-01-20 19:32:00     1\n",
       "2010-07-19 12:00:00     1\n",
       "2010-10-21 10:08:00     1\n",
       "2012-01-07 12:47:00     1\n",
       "2010-07-10 09:11:00     1\n",
       "2010-07-07 17:25:00     1\n",
       "2010-07-21 12:20:00     1\n",
       "2013-10-15 12:15:00     1\n",
       "2016-10-13 13:02:00     1\n",
       "2010-07-07 12:01:00     1\n",
       "2013-11-26 10:14:00     1\n",
       "2010-07-17 11:39:00     1\n",
       "2010-07-21 09:24:00     1\n",
       "2010-07-16 17:41:00     1\n",
       "2011-07-05 11:04:00     1\n",
       "2010-07-21 11:45:00     1\n",
       "2013-11-13 15:50:00     1\n",
       "2010-07-10 09:34:00     1\n",
       "2010-07-15 14:00:00     1\n",
       "2010-07-12 16:28:00     1\n",
       "2013-10-21 10:40:00     1\n",
       "2010-07-10 14:11:00     1\n",
       "2010-07-16 14:46:00     1\n",
       "2013-11-06 09:45:00     1\n",
       "2010-07-11 16:19:00     1\n",
       "2013-11-29 15:47:00     1\n",
       "2010-07-20 11:54:00     1\n",
       "2010-07-21 12:17:00     1\n",
       "2012-01-04 21:07:00     1\n",
       "2010-07-23 09:51:00     1\n",
       "2010-07-12 15:56:00     1\n",
       "2010-07-16 10:31:00     1\n",
       "2012-01-23 17:29:00     1\n",
       "2010-07-26 11:51:00     1\n",
       "2013-10-07 09:42:00     1\n",
       "2013-10-08 10:24:00     1\n",
       "2012-01-17 16:09:00     1\n",
       "2013-09-30 14:09:00     1\n",
       "2010-07-23 14:34:00     1\n",
       "2010-07-15 17:43:00     1\n",
       "2010-12-07 09:10:00     1\n",
       "2016-07-04 11:12:00     1\n",
       "2010-07-17 15:26:00     1\n",
       "2011-02-17 16:05:00     1\n",
       "2013-10-16 11:45:00     1\n",
       "2013-10-25 11:31:00     1\n",
       "2010-07-10 16:02:00     1\n",
       "2013-10-16 13:35:00     1\n",
       "2010-07-17 17:15:00     1\n",
       "2012-02-29 08:17:00     1\n",
       "2016-01-04 11:54:00     1\n",
       "2010-07-10 14:07:00     1\n",
       "2010-07-12 15:33:00     1\n",
       "2013-10-14 14:14:00     1\n",
       "2010-07-27 12:22:00     1\n",
       "2010-09-06 09:41:00     1\n",
       "2010-07-08 11:28:00     1\n",
       "2012-02-01 16:10:00     1\n",
       "2010-07-16 15:45:00     1\n",
       "2011-12-08 12:07:00     1\n",
       "2010-07-06 16:15:00     1\n",
       "2010-07-08 16:25:00     1\n",
       "2013-09-26 17:11:00     1\n",
       "2010-07-20 12:39:00     1\n",
       "2011-02-03 11:29:00     1\n",
       "2010-07-18 18:03:00     1\n",
       "2014-03-31 14:42:00     1\n",
       "2010-07-20 16:32:00     1\n",
       "2010-07-16 10:40:00     1\n",
       "2010-07-16 14:29:00     1\n",
       "2014-02-17 10:38:00     1\n",
       "2010-07-23 14:06:00     1\n",
       "2012-01-24 19:27:00     1\n",
       "2015-11-26 09:21:00     1\n",
       "2010-12-01 11:08:00     1\n",
       "2012-01-09 14:03:00     1\n",
       "2013-11-18 08:32:00     1\n",
       "2010-07-23 12:34:00     1\n",
       "2010-07-18 09:30:00     1\n",
       "2012-01-22 18:22:00     1\n",
       "2010-07-08 16:18:00     1\n",
       "2012-01-24 18:37:00     1\n",
       "2010-07-23 11:06:00     1\n",
       "2013-09-25 12:53:00     1\n",
       "2010-07-07 12:20:00     1\n",
       "2010-07-21 17:01:00     1\n",
       "2010-07-27 17:37:00     1\n",
       "2012-01-09 13:23:00     1\n",
       "2016-07-20 10:00:00     1\n",
       "2013-10-16 14:50:00     1\n",
       "2013-10-10 12:02:00     1\n",
       "2013-11-20 15:54:00     1\n",
       "2016-06-01 14:31:00     1\n",
       "2013-10-22 11:42:00     1\n",
       "2013-10-27 09:38:00     1\n",
       "2010-07-06 16:29:00     1\n",
       "2013-10-15 15:49:00     1\n",
       "2013-11-18 11:37:00     1\n",
       "2010-07-14 16:05:00     1\n",
       "2013-10-30 14:26:00     1\n",
       "2010-07-21 11:29:00     1\n",
       "2010-07-21 15:42:00     1\n",
       "2012-01-24 10:27:00     1\n",
       "2011-12-08 14:37:00     1\n",
       "2013-12-04 15:54:00     1\n",
       "2010-07-14 12:42:00     1\n",
       "2012-01-12 13:14:00     1\n",
       "2011-10-24 10:32:00     1\n",
       "2010-07-26 13:33:00     1\n",
       "2014-01-20 13:04:00     1\n",
       "2013-11-25 12:38:00     1\n",
       "2013-10-08 16:15:00     1\n",
       "2012-01-07 13:58:00     1\n",
       "2010-07-21 15:49:00     1\n",
       "2012-01-22 18:17:00     1\n",
       "2010-07-15 17:23:00     1\n",
       "2010-07-18 10:08:00     1\n",
       "2010-07-17 11:58:00     1\n",
       "2013-11-27 14:43:00     1\n",
       "2010-07-21 16:58:00     1\n",
       "2010-07-11 11:48:00     1\n",
       "2010-07-10 13:59:00     1\n",
       "2010-07-14 09:43:00     1\n",
       "2013-11-22 13:03:00     1\n",
       "2013-11-07 14:46:00     1\n",
       "2013-11-28 09:30:00     1\n",
       "2010-07-27 10:51:00     1\n",
       "2010-07-17 15:33:00     1\n",
       "2013-10-03 11:10:00     1\n",
       "2012-01-17 18:38:00     1\n",
       "2010-07-13 14:28:00     1\n",
       "2013-11-11 12:27:00     1\n",
       "2010-07-20 13:34:00     1\n",
       "2010-07-14 10:31:00     1\n",
       "2013-11-12 11:05:00     1\n",
       "2012-01-19 08:35:00     1\n",
       "2016-06-03 11:19:00     1\n",
       "2012-02-06 07:58:00     1\n",
       "2012-02-09 09:14:00     1\n",
       "2010-07-14 13:06:00     1\n",
       "2012-01-09 11:39:00     1\n",
       "2010-07-22 15:16:00     1\n",
       "2010-11-24 13:00:00     1\n",
       "2016-06-03 09:40:00     1\n",
       "2010-07-05 15:34:00     1\n",
       "2010-07-20 10:05:00     1\n",
       "2010-07-17 11:56:00     1\n",
       "2012-01-23 17:41:00     1\n",
       "2012-03-05 08:59:00     1\n",
       "2010-07-27 10:16:00     1\n",
       "2010-07-13 14:56:00     1\n",
       "2016-07-26 14:16:00     1\n",
       "2012-01-07 15:10:00     1\n",
       "2010-07-06 15:32:00     1\n",
       "2014-02-12 12:35:00     1\n",
       "2010-07-12 09:55:00     1\n",
       "2019-07-17 09:35:00     1\n",
       "2010-07-23 14:17:00     1\n",
       "2010-07-18 09:32:00     1\n",
       "2011-03-08 13:55:00     1\n",
       "2014-05-09 12:32:00     1\n",
       "2010-07-14 11:21:00     1\n",
       "2018-10-11 11:45:00     1\n",
       "2010-07-15 15:51:00     1\n",
       "2010-07-21 16:53:00     1\n",
       "2013-11-05 12:13:00     1\n",
       "2010-07-20 16:36:00     1\n",
       "2010-07-20 13:16:00     1\n",
       "2012-01-24 12:26:00     1\n",
       "2010-07-20 10:02:00     1\n",
       "2010-07-15 17:27:00     1\n",
       "2010-07-20 16:50:00     1\n",
       "2012-01-24 09:47:00     1\n",
       "2010-07-14 09:53:00     1\n",
       "2012-01-12 09:20:00     1\n",
       "2013-12-05 13:40:00     1\n",
       "2010-07-14 17:22:00     1\n",
       "2014-01-06 11:43:00     1\n",
       "2010-07-14 12:38:00     1\n",
       "2010-07-13 14:38:00     1\n",
       "2010-07-21 16:37:00     1\n",
       "2013-10-28 12:45:00     1\n",
       "2012-02-29 08:19:00     1\n",
       "2013-11-26 09:27:00     1\n",
       "2013-11-18 17:52:00     1\n",
       "2013-10-21 10:19:00     1\n",
       "2013-11-22 13:59:00     1\n",
       "2012-01-07 15:08:00     1\n",
       "2013-11-19 12:50:00     1\n",
       "2010-07-05 15:47:00     1\n",
       "2017-10-26 12:46:00     1\n",
       "2015-11-02 17:29:00     1\n",
       "2013-09-30 15:46:00     1\n",
       "2010-07-16 15:40:00     1\n",
       "2010-07-21 09:27:00     1\n",
       "2010-07-22 14:34:00     1\n",
       "2013-11-21 09:24:00     1\n",
       "2010-07-15 18:36:00     1\n",
       "2012-03-15 07:40:00     1\n",
       "2010-07-15 18:42:00     1\n",
       "2012-02-10 15:06:00     1\n",
       "2014-07-25 11:09:00     1\n",
       "2010-07-15 14:12:00     1\n",
       "2010-07-19 11:26:00     1\n",
       "2010-07-12 17:34:00     1\n",
       "2013-11-12 11:34:00     1\n",
       "2010-07-23 14:14:00     1\n",
       "2010-07-15 10:44:00     1\n",
       "2010-07-13 11:08:00     1\n",
       "2010-07-18 17:43:00     1\n",
       "2010-07-09 17:02:00     1\n",
       "2011-01-10 12:03:00     1\n",
       "2013-10-01 13:04:00     1\n",
       "2013-11-21 10:08:00     1\n",
       "2010-07-20 12:34:00     1\n",
       "2011-06-28 11:53:00     1\n",
       "2013-09-27 16:10:00     1\n",
       "2018-12-13 00:00:00     1\n",
       "2010-07-21 16:47:00     1\n",
       "2011-03-08 14:14:00     1\n",
       "2013-11-14 18:17:00     1\n",
       "2013-10-28 15:55:00     1\n",
       "2013-11-15 13:03:00     1\n",
       "2010-07-16 14:35:00     1\n",
       "2011-10-13 09:55:00     1\n",
       "2016-03-31 08:56:00     1\n",
       "2010-09-15 10:32:00     1\n",
       "2012-01-30 15:37:00     1\n",
       "2010-07-15 15:53:00     1\n",
       "2010-07-26 15:00:00     1\n",
       "2010-07-12 16:08:00     1\n",
       "2010-07-20 13:29:00     1\n",
       "2010-11-18 11:37:00     1\n",
       "2013-10-29 16:18:00     1\n",
       "2010-07-13 12:24:00     1\n",
       "2012-01-04 19:31:00     1\n",
       "2010-12-07 12:42:00     1\n",
       "2010-07-16 16:05:00     1\n",
       "2012-01-07 16:11:00     1\n",
       "2012-01-19 18:12:00     1\n",
       "2012-01-19 09:03:00     1\n",
       "2010-07-16 10:42:00     1\n",
       "2010-07-07 13:51:00     1\n",
       "2010-11-18 11:44:00     1\n",
       "2010-07-22 13:07:00     1\n",
       "2010-07-13 14:19:00     1\n",
       "2013-11-15 15:43:00     1\n",
       "2010-07-10 09:29:00     1\n",
       "2013-10-17 12:52:00     1\n",
       "2010-07-10 14:15:00     1\n",
       "2010-10-11 10:48:00     1\n",
       "2010-07-19 11:37:00     1\n",
       "2013-11-21 10:10:00     1\n",
       "2012-01-30 15:42:00     1\n",
       "2010-10-11 12:26:00     1\n",
       "2012-03-15 07:21:00     1\n",
       "2012-01-11 15:10:00     1\n",
       "2012-01-17 08:57:00     1\n",
       "2010-07-09 17:10:00     1\n",
       "2010-07-16 15:10:00     1\n",
       "2010-07-15 14:40:00     1\n",
       "2010-07-23 11:19:00     1\n",
       "2017-03-09 13:16:00     1\n",
       "2010-09-29 11:31:00     1\n",
       "2010-07-15 11:20:00     1\n",
       "2010-07-21 15:07:00     1\n",
       "2011-07-15 11:28:00     1\n",
       "2010-07-23 11:15:00     1\n",
       "2010-07-06 17:20:00     1\n",
       "2013-11-04 17:00:00     1\n",
       "2018-06-20 00:00:00     1\n",
       "2010-07-15 12:10:00     1\n",
       "2011-01-28 08:36:00     1\n",
       "2010-07-16 14:40:00     1\n",
       "2012-01-19 18:08:00     1\n",
       "2013-10-08 11:18:00     1\n",
       "2010-07-04 12:21:00     1\n",
       "2013-11-29 11:15:00     1\n",
       "2010-07-16 17:29:00     1\n",
       "2010-07-15 12:32:00     1\n",
       "2010-07-07 11:56:00     1\n",
       "2010-07-15 11:59:00     1\n",
       "2010-07-23 12:31:00     1\n",
       "2013-10-31 11:12:00     1\n",
       "2012-03-01 16:43:00     1\n",
       "2010-07-19 14:25:00     1\n",
       "2010-07-17 16:38:00     1\n",
       "2010-07-19 16:10:00     1\n",
       "2011-12-08 13:17:00     1\n",
       "2015-08-13 09:40:00     1\n",
       "2012-01-19 09:44:00     1\n",
       "2010-07-26 09:37:00     1\n",
       "2012-01-22 18:04:00     1\n",
       "2013-10-21 11:54:00     1\n",
       "2014-02-21 12:49:00     1\n",
       "2014-02-27 09:41:00     1\n",
       "2016-06-02 13:21:00     1\n",
       "2010-07-21 15:45:00     1\n",
       "2013-10-14 10:43:00     1\n",
       "2013-11-26 11:15:00     1\n",
       "2014-04-02 13:35:00     1\n",
       "2010-07-19 11:57:00     1\n",
       "2014-01-15 10:30:00     1\n",
       "2012-02-28 15:58:00     1\n",
       "2010-07-08 11:43:00     1\n",
       "2010-07-13 15:07:00     1\n",
       "2010-07-13 17:04:00     1\n",
       "2011-02-28 16:00:00     1\n",
       "2010-11-25 12:08:00     1\n",
       "2010-07-10 14:03:00     1\n",
       "2013-12-02 15:14:00     1\n",
       "2013-10-15 15:12:00     1\n",
       "2010-07-16 10:46:00     1\n",
       "2012-01-30 15:31:00     1\n",
       "2010-07-06 17:36:00     1\n",
       "2013-11-13 12:31:00     1\n",
       "2010-07-05 15:40:00     1\n",
       "2013-10-16 15:37:00     1\n",
       "2010-07-23 12:38:00     1\n",
       "2013-11-06 10:24:00     1\n",
       "2012-01-10 12:13:00     1\n",
       "2013-11-20 17:28:00     1\n",
       "2010-07-26 11:48:00     1\n",
       "2010-07-21 12:36:00     1\n",
       "2010-07-16 14:49:00     1\n",
       "2011-03-08 11:21:00     1\n",
       "2010-12-08 10:57:00     1\n",
       "2010-07-17 12:16:00     1\n",
       "2010-07-21 16:34:00     1\n",
       "2010-07-22 11:21:00     1\n",
       "2012-03-16 07:39:00     1\n",
       "2010-07-07 17:27:00     1\n",
       "2011-01-27 09:48:00     1\n",
       "2010-07-21 11:33:00     1\n",
       "2011-03-09 11:15:00     1\n",
       "2016-01-11 10:10:00     1\n",
       "2012-03-03 11:13:00     1\n",
       "2012-01-20 19:38:00     1\n",
       "2011-02-10 14:26:00     1\n",
       "2013-11-07 12:30:00     1\n",
       "2013-11-14 15:38:00     1\n",
       "2010-07-22 15:30:00     1\n",
       "2010-07-16 17:26:00     1\n",
       "2011-02-07 11:19:00     1\n",
       "2016-07-04 11:00:00     1\n",
       "2010-07-22 13:13:00     1\n",
       "2010-07-23 11:22:00     1\n",
       "2010-07-15 11:34:00     1\n",
       "2010-07-23 12:42:00     1\n",
       "2018-12-12 10:39:00     1\n",
       "2010-10-25 13:18:00     1\n",
       "2012-01-07 13:10:00     1\n",
       "2010-07-15 15:47:00     1\n",
       "2018-02-01 00:00:00     1\n",
       "2010-07-26 14:56:00     1\n",
       "2012-01-07 14:17:00     1\n",
       "2013-10-10 15:23:00     1\n",
       "2010-07-26 09:39:00     1\n",
       "2013-10-24 14:30:00     1\n",
       "2010-12-07 09:07:00     1\n",
       "2014-01-06 10:19:00     1\n",
       "2010-07-20 11:47:00     1\n",
       "2014-01-21 13:26:00     1\n",
       "2010-11-18 11:31:00     1\n",
       "2013-11-27 12:17:00     1\n",
       "2012-02-27 14:28:00     1\n",
       "2010-07-26 12:06:00     1\n",
       "2014-01-08 10:47:00     1\n",
       "2010-07-26 17:10:00     1\n",
       "2010-07-14 11:36:00     1\n",
       "2010-07-21 09:16:00     1\n",
       "2010-07-20 09:37:00     1\n",
       "2010-07-08 16:13:00     1\n",
       "2010-07-14 17:26:00     1\n",
       "2011-06-28 11:54:00     1\n",
       "2010-07-21 09:29:00     1\n",
       "2010-07-22 11:17:00     1\n",
       "2010-07-14 09:36:00     1\n",
       "2010-07-04 12:04:00     1\n",
       "2012-01-25 12:02:00     1\n",
       "2013-11-22 14:56:00     1\n",
       "2010-07-21 09:56:00     1\n",
       "2010-07-15 14:35:00     1\n",
       "2010-07-15 18:39:00     1\n",
       "2013-10-27 10:34:00     1\n",
       "2010-07-19 12:12:00     1\n",
       "2010-07-06 15:25:00     1\n",
       "2010-07-07 13:49:00     1\n",
       "2011-02-17 15:28:00     1\n",
       "2012-01-24 18:34:00     1\n",
       "2013-11-26 13:35:00     1\n",
       "2010-07-20 09:58:00     1\n",
       "2010-07-16 10:58:00     1\n",
       "2013-12-02 12:02:00     1\n",
       "2013-10-23 15:51:00     1\n",
       "2017-02-17 12:52:00     1\n",
       "2013-11-20 13:00:00     1\n",
       "2010-07-13 16:59:00     1\n",
       "2010-07-15 12:29:00     1\n",
       "2010-07-27 11:22:00     1\n",
       "2013-11-11 14:27:00     1\n",
       "2010-07-15 14:08:00     1\n",
       "2010-07-14 17:17:00     1\n",
       "2012-03-22 08:52:00     1\n",
       "2010-07-05 15:37:00     1\n",
       "2010-07-23 12:28:00     1\n",
       "2010-07-26 09:42:00     1\n",
       "2012-03-14 07:38:00     1\n",
       "2010-07-17 17:12:00     1\n",
       "2013-11-01 16:12:00     1\n",
       "2020-09-10 16:44:00     1\n",
       "2010-07-08 16:09:00     1\n",
       "2016-09-01 10:51:00     1\n",
       "2010-07-11 16:49:00     1\n",
       "2010-07-23 15:22:00     1\n",
       "2010-07-06 14:42:00     1\n",
       "2010-07-15 11:55:00     1\n",
       "2010-07-12 14:26:00     1\n",
       "2017-07-20 13:48:00     1\n",
       "2014-03-04 13:26:00     1\n",
       "2013-11-06 11:44:00     1\n",
       "2012-01-30 15:39:00     1\n",
       "2010-07-13 10:23:00     1\n",
       "2012-01-30 15:21:00     1\n",
       "2010-07-21 15:18:00     1\n",
       "2011-01-17 11:57:00     1\n",
       "2010-07-07 13:45:00     1\n",
       "2010-06-19 13:01:00     1\n",
       "2011-03-02 14:12:00     1\n",
       "2010-07-26 15:05:00     1\n",
       "2013-10-16 15:28:00     1\n",
       "2010-07-22 13:15:00     1\n",
       "2012-02-09 08:48:00     1\n",
       "2016-02-29 11:19:00     1\n",
       "2016-07-04 15:00:00     1\n",
       "2013-11-12 10:12:00     1\n",
       "2010-07-21 13:22:00     1\n",
       "2013-10-18 09:19:00     1\n",
       "2010-07-10 14:39:00     1\n",
       "2010-07-20 09:22:00     1\n",
       "2010-07-14 16:18:00     1\n",
       "2013-10-30 12:29:00     1\n",
       "2011-12-22 10:52:00     1\n",
       "2012-01-30 15:47:00     1\n",
       "2012-01-30 15:51:00     1\n",
       "2013-10-27 15:28:00     1\n",
       "2010-07-22 13:26:00     1\n",
       "2012-04-05 09:08:00     1\n",
       "2012-02-09 08:58:00     1\n",
       "2010-11-16 12:50:00     1\n",
       "2013-10-04 16:48:00     1\n",
       "2010-07-22 16:32:00     1\n",
       "2010-07-21 15:40:00     1\n",
       "2010-07-19 12:14:00     1\n",
       "2013-11-18 16:19:00     1\n",
       "2010-07-20 12:11:00     1\n",
       "2010-07-11 15:04:00     1\n",
       "2012-01-11 14:54:00     1\n",
       "2013-11-15 10:09:00     1\n",
       "2010-07-21 13:19:00     1\n",
       "2010-07-26 16:39:00     1\n",
       "2015-11-02 17:37:00     1\n",
       "2013-11-05 14:20:00     1\n",
       "2010-07-22 17:31:00     1\n",
       "2013-11-22 15:03:00     1\n",
       "2010-07-15 12:41:00     1\n",
       "2010-07-16 16:59:00     1\n",
       "2013-11-26 11:53:00     1\n",
       "2016-03-31 12:46:00     1\n",
       "2010-07-20 13:41:00     1\n",
       "2010-07-20 12:18:00     1\n",
       "2011-03-08 11:15:00     1\n",
       "2012-01-12 15:11:00     1\n",
       "2010-07-18 10:33:00     1\n",
       "2010-07-22 11:39:00     1\n",
       "2010-07-20 13:24:00     1\n",
       "2018-06-22 14:43:00     1\n",
       "2013-11-21 12:03:00     1\n",
       "2014-02-20 11:14:00     1\n",
       "2010-07-04 11:58:00     1\n",
       "2010-07-13 11:10:00     1\n",
       "2013-11-06 15:07:00     1\n",
       "2012-01-02 10:50:00     1\n",
       "2016-06-01 14:33:00     1\n",
       "2010-07-15 17:30:00     1\n",
       "2013-11-25 14:55:00     1\n",
       "2016-03-04 15:59:00     1\n",
       "2012-01-04 20:16:00     1\n",
       "2010-07-17 12:22:00     1\n",
       "2010-07-16 17:32:00     1\n",
       "2010-07-14 10:18:00     1\n",
       "2013-11-07 15:34:00     1\n",
       "2010-07-20 16:40:00     1\n",
       "2011-01-27 10:50:00     1\n",
       "2013-10-17 12:47:00     1\n",
       "2010-11-05 11:56:00     1\n",
       "2010-10-26 12:27:00     1\n",
       "2010-07-15 17:46:00     1\n",
       "2013-10-04 16:08:00     1\n",
       "2014-02-10 14:37:00     1\n",
       "2010-07-15 14:24:00     1\n",
       "2010-07-14 12:52:00     1\n",
       "2010-07-05 15:44:00     1\n",
       "2012-04-05 10:36:00     1\n",
       "2010-07-10 15:59:00     1\n",
       "2010-07-04 12:19:00     1\n",
       "2010-07-13 14:01:00     1\n",
       "2010-07-14 11:32:00     1\n",
       "2010-07-14 16:46:00     1\n",
       "2012-01-19 12:17:00     1\n",
       "2010-07-04 12:08:00     1\n",
       "2013-11-09 12:46:00     1\n",
       "2016-03-01 13:39:00     1\n",
       "2010-07-22 17:39:00     1\n",
       "2010-07-10 09:24:00     1\n",
       "2010-07-14 12:28:00     1\n",
       "2016-06-02 12:05:00     1\n",
       "2013-11-08 15:31:00     1\n",
       "2016-01-13 12:17:00     1\n",
       "2012-01-12 13:42:00     1\n",
       "2016-06-02 15:08:00     1\n",
       "2012-01-11 15:13:00     1\n",
       "2010-07-21 11:27:00     1\n",
       "2012-01-09 10:34:00     1\n",
       "2019-07-24 09:44:00     1\n",
       "2011-02-15 10:06:00     1\n",
       "2010-07-19 13:49:00     1\n",
       "2010-07-21 13:25:00     1\n",
       "2010-07-14 13:02:00     1\n",
       "2013-10-20 15:16:00     1\n",
       "2010-07-20 16:29:00     1\n",
       "2014-03-06 09:48:00     1\n",
       "2010-07-15 14:38:00     1\n",
       "2014-03-31 12:38:00     1\n",
       "2012-01-11 12:27:00     1\n",
       "2013-10-24 12:36:00     1\n",
       "2010-07-14 15:10:00     1\n",
       "2010-07-06 16:08:00     1\n",
       "2010-07-21 15:13:00     1\n",
       "2013-11-08 12:54:00     1\n",
       "2010-07-20 10:23:00     1\n",
       "2010-07-10 09:19:00     1\n",
       "2013-10-18 16:40:00     1\n",
       "2012-01-07 16:15:00     1\n",
       "2013-11-28 14:39:00     1\n",
       "2010-07-22 12:44:00     1\n",
       "2010-07-21 15:10:00     1\n",
       "2013-10-23 10:20:00     1\n",
       "2010-07-19 09:46:00     1\n",
       "2014-03-31 13:52:00     1\n",
       "2010-07-20 13:18:00     1\n",
       "2012-01-30 15:43:00     1\n",
       "2013-11-19 13:41:00     1\n",
       "2011-07-12 10:42:00     1\n",
       "2012-01-11 18:03:00     1\n",
       "2011-02-08 10:02:00     1\n",
       "2010-07-23 15:54:00     1\n",
       "2013-10-11 11:25:00     1\n",
       "2013-11-13 11:48:00     1\n",
       "2016-05-04 11:28:00     1\n",
       "2010-07-12 14:24:00     1\n",
       "2016-02-25 12:44:00     1\n",
       "2013-10-24 11:40:00     1\n",
       "2013-11-05 13:18:00     1\n",
       "Name: installedDate, dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"installedDate\"].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The installedDate column format is useful although I'm not sure anything other than year would be of much use. Therefore, I will only retain the year in this date column."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "df[\"installYear\"] = pd.DatetimeIndex(df[\"installedDate\"]).year"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can now drop the installedDate column as it'll be of no use"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>numBikes</th>\n",
       "      <th>numEmptyDocks</th>\n",
       "      <th>installed</th>\n",
       "      <th>locked</th>\n",
       "      <th>street</th>\n",
       "      <th>area</th>\n",
       "      <th>installYear</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>51.529163</td>\n",
       "      <td>-0.109971</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>River Street</td>\n",
       "      <td>Clerkenwell</td>\n",
       "      <td>2010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>51.499607</td>\n",
       "      <td>-0.197574</td>\n",
       "      <td>24</td>\n",
       "      <td>13</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>Phillimore Gardens</td>\n",
       "      <td>Kensington</td>\n",
       "      <td>2010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>51.521284</td>\n",
       "      <td>-0.084606</td>\n",
       "      <td>1</td>\n",
       "      <td>31</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>Christopher Street</td>\n",
       "      <td>Liverpool Street</td>\n",
       "      <td>2010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>51.530059</td>\n",
       "      <td>-0.120974</td>\n",
       "      <td>17</td>\n",
       "      <td>3</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>St. Chad's Street</td>\n",
       "      <td>King's Cross</td>\n",
       "      <td>2010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>51.493130</td>\n",
       "      <td>-0.156876</td>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>Sedding Street</td>\n",
       "      <td>Sloane Square</td>\n",
       "      <td>2010</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id        lat      long  numBikes  numEmptyDocks  installed  locked  \\\n",
       "0   1  51.529163 -0.109971         8             10       True   False   \n",
       "1   2  51.499607 -0.197574        24             13       True   False   \n",
       "2   3  51.521284 -0.084606         1             31       True   False   \n",
       "3   4  51.530059 -0.120974        17              3       True   False   \n",
       "4   5  51.493130 -0.156876        26              0       True   False   \n",
       "\n",
       "               street              area  installYear  \n",
       "0        River Street       Clerkenwell         2010  \n",
       "1  Phillimore Gardens        Kensington         2010  \n",
       "2  Christopher Street  Liverpool Street         2010  \n",
       "3   St. Chad's Street      King's Cross         2010  \n",
       "4      Sedding Street     Sloane Square         2010  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.drop(columns=\"installedDate\", inplace=True)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True    785\n",
       "Name: installed, dtype: int64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"installed\"].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False    785\n",
       "Name: locked, dtype: int64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"locked\"].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Lastly, we can see that all row have a value for installed and locked which do not tell us anything of interest. Therefore, we can also drop these columns."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(columns=[\"installed\", \"locked\"], inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "I am now happy with the dataset to start plotting and visualising patterns and relationships."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Plotting and visualising our dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can clearly see that plotting the longtitude and latitude produces a map of London. In order to plot these coordinates on a map of London, we will make use of the shapely.geometry library."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f9bb951b0d0>"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(\n",
    "    x=df[\"installYear\"].value_counts().index,\n",
    "    y=df[\"installYear\"].value_counts()\n",
    "\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see that most bike stations were installed in 2010 which is when the initiative began in London. The 1970 column can be dropped or replaced with the median/mean. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f9bb9779d50>"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(\n",
    "    x=df[\"area\"].value_counts()[df[\"area\"].value_counts()>10],\n",
    "    y=df[\"area\"].value_counts()[df[\"area\"].value_counts()>10].index\n",
    "\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can confirm from earlier that areas in and around the Centre tend to have highest count of "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f9bb9952850>"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "f, ax = plt.subplots()\n",
    "sns.distplot(df.area.value_counts(), kde=False, ax=ax)\n",
    "plt.xlabel(\"Total number of Bike Station\")\n",
    "plt.ylabel(\"Total number of Areas\")\n",
    "ax.axvline(df.area.value_counts().mean(), linestyle='-')\n",
    "ax.text(22, 3, \"Marylebone\")\n",
    "plt.legend({\"Mean\"})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
